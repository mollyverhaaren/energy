[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Renewable Energy and Grid Reliability",
    "section": "",
    "text": "1 Introduction\nAs the world transitions toward cleaner energy sources, the integration of renewable energy into the power grid has become a key focus in efforts to reduce carbon emissions and combat climate change. Inspired by personal and professional experiences—Molly’s exposure to unsustainable practices in fashion retail and Margot’s work in the renewable energy sector—this project seeks to address the complexities of building a reliable, clean, and affordable energy future. Our interest in this project lies in understanding how increasing the share of variable renewable energy sources, specifically wind and solar, impacts the stability and resilience of the electrical grid. Grid reliability is a critical component of the energy transition, as the variability of renewables can lead to fluctuations in power supply, potentially causing disruptions if not properly managed. By examining the relationship between renewable integration and grid reliability metrics like blackout frequency and outage duration, this project aims to provide insights into the causes of these events. We explore how increasing the share of variable renewable energy sources, particularly wind and solar, impacts the stability and resilience of the electrical grid through the following themes:\n\nChange Over Time: We assess the growing integration of wind and solar energy on the U.S. grid as well as the frequency and length of outages over the last decade, and we explore if there is a correlation between these changes.\nRegional Variability: We investigate geographic trends in outage data, and try to understand what is driving these grid reliability issues.\nExtreme Weather: We analyze the relationship between outages and extreme weather events and climate disasters.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Introduction</span>"
    ]
  },
  {
    "objectID": "data.html",
    "href": "data.html",
    "title": "2  Data",
    "section": "",
    "text": "2.1 Description",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#missing-value-analysis",
    "href": "data.html#missing-value-analysis",
    "title": "2  Data",
    "section": "2.2 Missing value analysis",
    "text": "2.2 Missing value analysis\n\n2.2.1 Load necessary libraries\n\n\nCode\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(tidyverse))\nsuppressPackageStartupMessages(library(readr))\n\n\n\n\n2.2.2 Load data\n\n\nCode\ndata1 &lt;- read_csv('Table1.csv', show_col_types = FALSE)\ndata2 &lt;- read_csv('Table2.csv', show_col_types = FALSE)\ndata4 &lt;- read_csv('Table4.csv', show_col_types = FALSE)\n\n\n\n\n2.2.3 Prepare data for missing values plot\n\n\nCode\ndata1_plot &lt;- data1 |&gt;\n  pivot_longer(cols = -Year) |&gt;\n  mutate(Missing = ifelse(is.na(value), 'Yes', 'No')) |&gt;\n  mutate(Year = as.character(Year))\n\ndata2_plot &lt;- data2 |&gt;\n  pivot_longer(cols = -State) |&gt;\n  mutate(Missing = ifelse(is.na(value), 'Yes', 'No'))\n\ndata4_plot &lt;- data4 |&gt;\n  pivot_longer(cols = -State) |&gt;\n  mutate(Missing = ifelse(is.na(value), 'Yes', 'No'))\n\n\n\n\n2.2.4 Missing values for each table\n\n2.2.4.1 Table 11.1\n\n\nCode\nggplot(data1_plot, aes(x = name, y = fct_rev(Year), fill = Missing)) +\n  geom_tile(color = 'white') +\n  scale_fill_viridis_d() +\n  labs(title = 'Table 11.1 Missing Values',\n       x = 'Column',\n       y = 'Year') +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nTable 11.1 contains “Reliability Metrics of U.S. Distribution System” by year from 2013 to 2023 for multiple reliability metrics and 2 calculation methods. There are no missing values in this table.\n\n\n2.2.4.2 Table 11.2\n\n\nCode\nggplot(data2_plot, aes(x = name, y = fct_rev(State), fill = Missing)) +\n  geom_tile(color = 'white') +\n  scale_fill_viridis_d() +\n  labs(title = 'Table 11.2 Missing Values',\n       x = 'Column',\n       y = 'State') +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nTable 11.2 contains “Reliability Metrics Using IEEE of U.S. Distribution System by State” by year for 2022 to 2023 for multiple reliability metrics. The state of Hawaii is missing values for many of these reliability metrics. Hawaii’s grid operates very differently to other states’ grids so we will choose to exclude Hawaii in our analysis, and rather focus on the continental United States (all states excluding Hawaii). All other states have no missing data in this table.\n\n\n2.2.4.3 Table 11.4\n\n\nCode\nggplot(data4_plot, aes(x = name, y = fct_rev(State), fill = Missing)) +\n  geom_tile(color = 'white') +\n  scale_fill_viridis_d() +\n  labs(title = 'Table 11.2 Missing Values',\n       x = 'Column',\n       y = 'State') +\n  theme_bw()\n\n\n\n\n\n\n\n\n\nTable 11.4 contains “SAIDI Values (Minutes Per Year) of U.S. Distribution System by State, 2013 - 2023” (SAIDI is one specific reliability metric). The state of Hawaii is again missing values for many years of data.We will again choose to exclude Hawaii in our analysis, and rather focus on the continental United States (all states excluding Hawaii). Nevada is missing data for the SAIDI value calculated with “Loss of Supply Removed” in 2014. We are planning on using SAIDI metrics that include “All Events” rather than the “Loss of Supply Removed”, so this missing value does not cause any issues. All other states have no missing data in this table.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "data.html#description",
    "href": "data.html#description",
    "title": "2  Data",
    "section": "",
    "text": "2.1.1 How are the data collected and by whom?\nWe will be using datasets from the U.S. Energy Information Administration (EIA), an agency within the U.S. Department of Energy. The role of the agency is to collect, analyze, and provide access to energy information to the public, industry stakeholders, and policymakers. EIA data is collected through monitoring systems, surveys, and collaboration with industry, state, and federal agencies.\n\n\n2.1.2 Format of the data, the frequency of updates, dimensions, and any other relevant information:\nWe will be using 3 different tables posted on the EIA website with data presented in HTML table format that contains grid reliability metrics of the U.S. Distribution system. These tables are updated annually with the latest data available through 2023. These tables include the following:\n\nYear: from 2013 to 2023\nReliability Metrics: SAIDI (System Average Interruption Duration Index), SAIFI (System Average Interruption Frequency Index), and CAIDI (Customer Average Interruption Duration Index).\nStates: all US states\nEvent type: Categorization of different outage event types\n\nThe data is sourced from the EIA’s Form EIA-861, Annual Electric Power Industry Report.\nWe will also be using an Excel spreadsheet (.xlsx) containing the EIA-860 Annual Electric Generator report. This dataset is also updated annually with the latest release on September 23, 2024, which contains data through 2023. The dataset includes the following:\n\nYears: 1990 to 2023\nStates: All US states\nFuel Source: what kind of generator (Natural Gas, Coal, Wind, etc.)\nNameplate Capacity: MW Capacity of each fuel source\n\n\n\n2.1.3 Data issues:\n\nSince all data sources used are only at the state level, we will manually create ISO groupings when exploring the second question of our analysis\nWe will assume that hydroelectric and nuclear energy provide stable enough renewable integration to be negligible when studying grid reliability, so we will consider only wind and solar throughout our analysis\n\n\n\n2.1.4 Importing the data:\n\nThe HTML EIA-861 tables can be copy and pasted into Excel documents and the data can be imported into R as a csv.\nThe Excel EIA-860 document can be imported into R as a csv.\n\n\n\n2.1.5 Data sources:\nReliability Metrics of U.S. Distribution System (EIA-861): \n\nReliability Metrics of US Distribution System\nTable 11.4. SAIDI values of U.S. distribution system by state\nTable 11.2. Reliability metrics using IEEE of U.S. distribution system by state\nThe Environment for Analysis of Geo-Located Energy Information’s Recorded Electricity Outages 2014-2023\n\nEIA-860 Annual Electric Generator Report:\n\nHistorical State Data - U.S. Energy Information Administration (EIA)\n2023 Renewable Energy Outlook\n\nNOAA Extreme Weather Report:\n\nBillion-Dollar Weather and Climate Disasters",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Data</span>"
    ]
  },
  {
    "objectID": "results.html",
    "href": "results.html",
    "title": "3  Results",
    "section": "",
    "text": "3.1 Setting the Scene: Renewable Integration in the U.S. Over Time\nUnderstanding the trajectory of U.S. electricity generation over the past three decades provides context for the challenges and opportunities presented by renewable energy integration. The plot below serves as the foundation of our analysis, showing the shift in energy sources from 1990 to 2023. The total area adds up to the country’s total generation capacity in any given year. It highlights the following:\nWe focus this analysis on wind and solar electricity generation because they provide clean but intermittent energy (after all, we can’t control when the wind is blowing and the sun is shining!). As the U.S. works to reduce carbon emissions and combat climate change, the grid will be more reliant on these intermittent energy sources, so understanding their impact on grid reliability is crucial.\nCode\nus_gen_data &lt;- read.csv(\"US_generation.csv\")\n\ncolnames(us_gen_data)[1] &lt;- \"Year\"\n\nus_gen_data &lt;- us_gen_data |&gt;\n  filter(Year &gt;= 1990)\n\ndata1_long &lt;- us_gen_data |&gt;\n  select(Year, wind, solar, `coal`, `natural.gas`, `nuclear`, `other.renewables`, `petroleum.and.other`) |&gt;\n  pivot_longer(cols = -Year, names_to = \"Energy_Source\", values_to = \"Generation\")\n\n# Set factor levels (wind and solar at the top)\ndata1_long$Energy_Source &lt;- factor(data1_long$Energy_Source, \n                                  levels = c(\"solar\",\"wind\",\"other.renewables\", \"nuclear\", \"natural.gas\",\n                                             \"petroleum.and.other\", \"coal\"))\n# Area Chart\nggplot(data1_long, aes(x = Year, y = Generation, fill = Energy_Source)) +\n  geom_area(alpha = 0.8, position = \"stack\") +\n  scale_fill_manual(values = c(\"coal\" = \"gray10\", \n                               \"natural.gas\" = \"gray50\", \n                               \"nuclear\" = \"gray80\", \n                               \"other.renewables\" = \"cornflowerblue\", \n                               \"petroleum.and.other\" = \"gray30\",\n                               \"wind\" = \"green4\",\n                               \"solar\" = \"yellow\")) +\n  labs(title = \"US Electricity Generation Capacity (MW) by Source 1990-2023\",\n       x = \"Year\",\n       y = \"Electricity Generation Capacity (MW)\",\n       fill = \"Energy Source\") +\n  theme_minimal()\nThe plot above may give the impression that wind and solar currently contribute only a modest portion to the U.S. energy mix. However, when we plot their share of the country’s total electricity generation from 1990 to 2023, we see a significant growth trajectory. Starting from near zero contribution in the 1990s, wind and solar now account for 14.1% of total generation as of 2023. This trend is expected to accelerate significantly in the coming decades. According to EIA forecasts, wind and solar are projected to reach nearly 50% of total electricity generation by 2050.\nThis “Wind & Solar as a Fraction of Total Electricity Generation” metric measures the share of electricity generation coming from intermittent sources, and is often referred to as a percentage value called “Renewable Penetration”.\nCode\n# Add a new column to calculate the fraction of wind + solar generation\ndata2 &lt;- us_gen_data |&gt;\n  mutate(\n    Total_Generation = wind + solar + coal + natural.gas + nuclear + other.renewables + petroleum.and.other,\n    Wind_Solar_Fraction = (wind + solar) / Total_Generation\n  )\n\n# Find the last data point\nlast_point &lt;- data2 |&gt; filter(Year == max(Year))\n\n# Load and prepare the forecast data in R\nforecast &lt;- read.csv(\"Renewable_Energy_Forecast.csv\") |&gt;\n  select(Year, Solar_Wind_Fraction) |&gt;\n  rename(Solar_Wind_Fraction = Solar_Wind_Fraction)\n\n# Combine the historical and forecast data for plotting\ncombined_data &lt;- bind_rows(\n  data2 |&gt; select(Year, Wind_Solar_Fraction) |&gt; rename(Fraction = Wind_Solar_Fraction),\n  forecast |&gt; rename(Fraction = Solar_Wind_Fraction)\n)\n\n# Find the last data point\nlast_point2 &lt;- forecast |&gt; filter(Year == max(Year))\n\n# Plot with the forecast\nggplot(data2, aes(x = Year, y = Wind_Solar_Fraction)) +\n  geom_line(color = \"darkolivegreen4\", linewidth = 1.2) +\n  geom_line(data = forecast, aes(x = Year, y = Solar_Wind_Fraction),\n            color = \"darkolivegreen4\", linetype = \"dashed\", linewidth = 1.2) +\n  geom_point(data = last_point, aes(x = Year, y = Wind_Solar_Fraction), \n             size = 2.5, color = \"darkolivegreen4\") +\n  geom_text(data = last_point, aes(label = scales::percent(Wind_Solar_Fraction, accuracy = 0.1)),\n            vjust = -0.5, hjust = 1, color = \"darkolivegreen4\") +\n  geom_text(data = forecast |&gt; filter(Year == 2050),\n            aes(x = Year, y = Solar_Wind_Fraction,\n                label = scales::percent(Solar_Wind_Fraction, accuracy = 0.1)),\n            vjust = -0.5, hjust = -0.1, color = \"darkolivegreen4\") + \n geom_point(data = last_point2, aes(x = Year, y = Solar_Wind_Fraction), \n             size = 2.5, color = \"darkolivegreen4\") +\n  labs(title = \"Wind & Solar as a Fraction of Total Electricity Generation (Historical 1990 - 2023 and Forecast 2024-2050)\",\n       x = \"Year\",\n       y = \"Renewable Penetration\") +\n  theme_minimal() +\n  scale_y_continuous(labels = scales::percent_format())+\n  scale_x_continuous(breaks = seq(1990, 2050, by = 5))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#grid-reliability",
    "href": "results.html#grid-reliability",
    "title": "3  Results",
    "section": "3.2 Grid Reliability",
    "text": "3.2 Grid Reliability\nGrid reliability ensures that electricity is consistently available to meet the needs of homes, businesses, and critical services. As the U.S. transitions to a cleaner energy grid, understanding renewable energy’s impact on reliability is very important. The two key metrics the EIA uses to measure grid reliability are CAIDI and SAIDI, which help quantify the frequency and duration of power outages experienced by consumers:\n\nCAIDI: Customer Average Interruption Duration Index. It is average number of minutes it takes to restore non-momentary electric interruptions.\nSAIDI: System Average Interruption Duration Index. It is the minutes of non-momentary electric interruptions, per year, the average customer experienced.\n\nHigher CAIDI and SAIDI values indicate a less reliable grid where interruptions/outages are either more frequent, take longer to restore, or both.\nIn the plot below, the comparison of reliability metrics on the left (including major events) and the right (excluding major events) demonstrates a relationship between grid reliability and “major event days”, described by the EIA as “any day that exceeds a daily SAIDI threshold”. When all major events are included, the plot shows significant spikes in some years: 2017, 2020, and 2021. Conversely, when major events are excluded, the metrics remain relatively stable over time, suggesting that the underlying reliability of the grid is not significantly affected by increasing renewable energy penetration, and is rather driven by the occurrence of these major events that we investigate in section 3.5.\n\n\nCode\nt1_reliability &lt;- read.csv(\"T1_Reliability.csv\")\n\nt1_reliability &lt;- t1_reliability |&gt;\n   filter(`Event_Category` %in% c(\"IEEE_All_Events\", \"IEEE_No_Major_Events\"))\n\nt1_reliability$Year &lt;- as.integer(t1_reliability$Year)\n\n# Reshape the data to a long format for plotting\ndata3_long &lt;- t1_reliability  |&gt;\n  pivot_longer(cols = c(SAIDI, CAIDI), names_to = \"Metric\", values_to = \"Value\")\n\n# Plot the line graph faceted by Event Category\nggplot(data3_long, aes(x = Year, y = Value, color = Metric)) +\n  geom_line(linewidth = 1.2) +\n  scale_x_continuous(breaks = seq(2013, 2023, 1)) +\n  scale_y_continuous(limits = c(0, 550), expand = c(0, 0)) + \n  scale_color_manual(values = c(\"SAIDI\" = '#3c5c8a',\"CAIDI\" = 'gray70'),\n                     breaks = c(\"SAIDI\",\"CAIDI\")) +\n  labs(title = \"Reliability Metrics (2013–2023)\",\n       x = \"Year\",\n       y = \"Value\",\n       color = \"Metric\") +\n  facet_wrap(~ `Event_Category`,\n             labeller = labeller(`Event_Category` = c(\"IEEE_All_Events\" = \"All Events (With Major Event Days)\",\n                                                      \"IEEE_No_Major_Events\" = \"Without Major Event Days\"))) +\n  theme_minimal() +\n  theme(legend.position = 'bottom')",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "conclusion.html",
    "href": "conclusion.html",
    "title": "5  Conclusion",
    "section": "",
    "text": "Code\nsuppressPackageStartupMessages(library(ggplot2))\nsuppressPackageStartupMessages(library(dplyr))\nsuppressPackageStartupMessages(library(tidyr))\nsuppressPackageStartupMessages(library(readr))\nsuppressPackageStartupMessages(library(vcd))\nsuppressPackageStartupMessages(library(patchwork))\nsuppressPackageStartupMessages(library(gridExtra))\n\n\n\n\nCode\nt4_rbs &lt;- read_csv(\"T4_ReliabilityByState.csv\")\n\n\nRows: 55 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Method, Event_Grouping\ndbl (52): Census_Division, CT, ME, MA, NH, RI, VT, NJ, NY, PA, IL, IN, MI, O...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\ndata_rbs &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'All Events (With Major Event Days)')\n\n\n\n\nCode\nrbs_2023 &lt;- data_rbs |&gt;\n  filter(Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\n\n\n\nCode\nstate_generation_2023 &lt;- read_csv('state_generation_2023.csv')\n\n\nRows: 503 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, source\ndbl (3): year, generation, gen_round\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\nstate_generation_2023 &lt;- state_generation_2023 |&gt;\n  group_by(state, source) |&gt;\n  summarise(generation = sum(generation))\n\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\n\n\n\nCode\nstate_pen_2023 &lt;- state_generation_2023 |&gt;\n  pivot_wider(names_from = source, values_from = generation, values_fill = 0) |&gt;\n  mutate(total_gen = coal + natural.gas + other.renewables + petroleum.and.other + solar + wind + nuclear,\n         wind_solar = wind + solar,\n         w_s_pen = wind_solar/total_gen)\n\n\n\n\nCode\nscatter_state_2023 &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\n\nNo clear pattern from scatterplot by state. Possible that reliability slightly decreases as penetration increases. Look into coloring by region given in tables. Look into coloring by ISO state groupings. Look into other years.\n\n\nCode\nrbs_2023_no_major &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'Without Major Event Days',\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\nscatter_state_2023_no_major &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_no_major, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\nrbs_2023_combo &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping %in% c('Without Major Event Days','All Events (With Major Event Days)'),\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI, Event_Grouping)\n\nscatter_state_2023_combo &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_combo, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI, Event_Grouping)\n\nplot1 &lt;- ggplot(data = scatter_state_2023_combo, mapping = aes(x = w_s_pen, y = SAIDI)) +\n  geom_point(alpha = .7, size = 3) +\n  coord_cartesian(ylim = c(0,1850)) + \n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Energy Generation Penetration by Wind and Solar\",\n       y = \"Average Outage Duration (SAIDI)\") +\n  theme_minimal()\n\n\nCreate a patchwork subplot that puts unmarked scatterplot left of marked scatterplot\n\n\nCode\nplot2 &lt;- ggplot(data = scatter_state_2023_combo, mapping = aes(x = w_s_pen, y = SAIDI, color = Event_Grouping)) +\n  geom_point(alpha = .7, size = 3) +\n  # coord_cartesian(ylim = c(0,1850)) + \n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Energy Generation Penetration by Wind and Solar\",\n       y = \"Average Outage Duration (SAIDI)\",\n       color = \"Outage Event Grouping\") +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\nCode\nno_hawaii &lt;-scatter_state_2023_no_major |&gt;\n  filter(state != 'HI')\n\ncc &lt;- cor(no_hawaii$w_s_pen, no_hawaii$SAIDI)\n\nplot3 &lt;- ggplot(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'), mapping = aes(x = w_s_pen, y = SAIDI)) +\n  geom_point(alpha = .7, size = 3, color = '#31bdc3') +\n  geom_smooth(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'),\n              method = 'lm',\n              color = '#1d7276') +\n  annotate(\"text\", x = .35, y = 125, label = paste(\"Correlation:\", round(cc, 3))) +\n  coord_cartesian(ylim = c(0, 450)) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Energy Generation Penetration by Wind and Solar\",\n       y = \"Average Outage Duration (SAIDI)\") +\n  theme_minimal()\n\n\n\n\nCode\n# plot1 + plot2 + plot3\n\nplot2 + plot3 +\n  plot_layout(widths = c(2, 2.3)) +\n  plot_annotation(title = 'Outage Duration by Wind and Solar Penetration \\n With and Without Major Events (2023)',\n                  theme = theme(plot.title = element_text(hjust = .5, size = 16)))\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).\nRemoved 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\n# rbs_5ly &lt;- data_rbs |&gt;\n#   filter(Method == 'IEEE',\n#          Event_Grouping == 'All Events (With Major Event Days)',\n#          Census_Division %in% c('2023', '2022', '2021', '2020', '2019')) |&gt;\n#   select(Census_Division, state, SAIDI) |&gt;\n#   mutate(year = Census_Division) |&gt;\n#   select(-Census_Division)\n# \n# state_generation &lt;- read_csv('state_generation.csv')\n# \n# state_pen_5ly &lt;- state_generation |&gt;\n#   filter(year %in% c(2019, 2020, 2021, 2022, 2023)) |&gt;\n#   select(year, state, source, generation) |&gt;\n#   group_by(year, state, source) |&gt;\n#   summarise(generation = sum(generation)) |&gt;\n#   pivot_wider(names_from = source, values_from = generation, values_fill= 0) |&gt;\n#   mutate(total_gen = coal + natural.gas + other.renewables + petroleum.and.other + solar + wind + nuclear,\n#          wind_solar = wind + solar,\n#          w_s_pen = wind_solar/total_gen)\n# \n# scatter_state_5ly &lt;- state_pen_5ly |&gt;\n#   left_join(rbs_5ly, by = c('year' = 'year','state' = 'state')) |&gt;\n#   select(year, state, w_s_pen, SAIDI)\n# \n# ggplot(data = scatter_state_5ly, mapping = aes(x = w_s_pen, y = SAIDI)) +\n#   geom_point(alpha = .7, size = 3, color = 'darkolivegreen') +\n#   facet_wrap('year', nrow = 1) +\n#   scale_x_continuous(labels = scales::percent_format()) +\n#   labs(title = \"Outage Duration by Renewable Energy Penetration by State (2019-2023)\",\n#        x = \"Penetration of Energy Generation by Wind and Solar\",\n#        y = \"Outage/Interruption Duration (SAIDI)\")\n\n\n\n\nCode\nall_events_pen_med &lt;- median(scatter_state_2023$w_s_pen)\n\nall_events_SAIDI_med &lt;- median(scatter_state_2023$SAIDI)\n\nall_events_mos &lt;- scatter_state_2023 |&gt;\n  mutate(Penetration = if_else(w_s_pen &gt;= all_events_pen_med, 1, 0),\n         SAIDI = if_else(SAIDI &gt;= all_events_SAIDI_med, 1, 0)) |&gt;\n  select(-w_s_pen)\n\nmosaic(SAIDI ~ Penetration, all_events_mos, direction = c(\"v\", \"h\"),\n       main = \"With Major Events\")\n\n\n\n\n\n\n\n\n\nCode\nno_major_pen_med &lt;- median(no_hawaii$w_s_pen)\n\nno_major_SAIDI_med &lt;- median(no_hawaii$SAIDI)\n\nno_major_mos &lt;- no_hawaii |&gt;\n  mutate(Penetration = if_else(w_s_pen &gt;= no_major_pen_med, 1, 0),\n         SAIDI = if_else(SAIDI &gt;= no_major_SAIDI_med, 1, 0)) |&gt;\n  select(-w_s_pen)\n\nmosaic(SAIDI ~ Penetration, no_major_mos, direction = c(\"v\", \"h\"),\n       main = 'Without Major Events')",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Conclusion</span>"
    ]
  },
  {
    "objectID": "results.html#setting-the-scene-renewable-integration-in-the-u.s.-over-time",
    "href": "results.html#setting-the-scene-renewable-integration-in-the-u.s.-over-time",
    "title": "3  Results",
    "section": "",
    "text": "The decline of coal and petroleum-based generation.\nThe rise of natural gas.\nThe rapid growth of intermittent renewables (wind and solar), especially in the past decade.\nThe consistency of other renewables, which include hydroelectric, geothermal, and biomass.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#is-there-any-correlation-between-renewable-penetration-and-grid-reliability",
    "href": "results.html#is-there-any-correlation-between-renewable-penetration-and-grid-reliability",
    "title": "3  Results",
    "section": "3.3 Is there any correlation between renewable penetration and grid reliability?:",
    "text": "3.3 Is there any correlation between renewable penetration and grid reliability?:\n\n\nCode\n# Load reliability metrics (SAIDI) from 2013-2023 by state\nt4_rbs &lt;- read_csv(\"T4_ReliabilityByState.csv\")\n\n\nRows: 55 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Method, Event_Grouping\ndbl (52): Census_Division, CT, ME, MA, NH, RI, VT, NJ, NY, PA, IL, IN, MI, O...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Pivot longer by state and filter to IEEE All Events\ndata_rbs &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'All Events (With Major Event Days)')\n\n# Create 2023-only version with major event days\nrbs_2023 &lt;- data_rbs |&gt;\n  filter(Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\n# Create 2023-only version without major event days\nrbs_2023_no_major &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'Without Major Event Days',\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\n# Load renewable penetration from 2023 by state\nstate_generation_2023 &lt;- read_csv('state_generation_2023.csv')\n\n\nRows: 503 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, source\ndbl (3): year, generation, gen_round\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Calculate generation by energy type by state\nstate_generation_2023 &lt;- state_generation_2023 |&gt;\n  group_by(state, source) |&gt;\n  summarise(generation = sum(generation))\n\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\n\nCode\n# Derive renewable penetration from generation\nstate_pen_2023 &lt;- state_generation_2023 |&gt;\n  pivot_wider(names_from = source, values_from = generation, values_fill = 0) |&gt;\n  mutate(total_gen = coal + natural.gas + other.renewables + petroleum.and.other + solar + wind + nuclear,\n         wind_solar = wind + solar,\n         w_s_pen = wind_solar/total_gen)\n\n# Create combo dataset that disregards event grouping type\nrbs_2023_combo &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping %in% c('Without Major Event Days','All Events (With Major Event Days)'),\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI, Event_Grouping)\n\n# Join reliability (SAIDI) with renewable penetration by state with major event days\nscatter_state_2023 &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\n# Join reliability (SAIDI) with renewable penetration by state without major event days\nscatter_state_2023_no_major &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_no_major, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\n# Join reliability (SAIDI) with renewable penetration by state for combo version \nscatter_state_2023_combo &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_combo, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI, Event_Grouping)\n\n# Store scatter plot colored by event grouping type\nplot2 &lt;- ggplot(data = scatter_state_2023_combo, mapping = aes(x = w_s_pen, y = SAIDI, color = Event_Grouping)) +\n  geom_point(alpha = .7, size = 3) +\n  # coord_cartesian(ylim = c(0,1850)) + \n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Renewable Penetration\",\n       y = \"Average Outage Duration (SAIDI)\",\n       color = \"Outage Event Grouping\") +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n# Get rid of Hawaii (NA) to calculate correlation coefficient\nno_hawaii &lt;-scatter_state_2023_no_major |&gt;\n  filter(state != 'HI')\n\n# Calc corr coeff\ncc &lt;- cor(no_hawaii$w_s_pen, no_hawaii$SAIDI)\n\n# Store second scatter plot, a version zoomed in on without major event days that includes a regression\nplot3 &lt;- ggplot(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'), mapping = aes(x = w_s_pen, y = SAIDI)) +\n  geom_point(alpha = .7, size = 3, color = '#31bdc3') +\n  geom_smooth(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'),\n              method = 'lm',\n              color = '#1d7276') +\n  annotate(\"text\", x = .35, y = 125, label = paste(\"Correlation:\", round(cc, 3))) +\n  coord_cartesian(ylim = c(0, 450)) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Renewable Penetration\",\n       y = \"Average Outage Duration (SAIDI)\") +\n  theme_minimal()\n\n# Patch plots together\nplot2 + plot3 +\n  plot_layout(widths = c(2, 2.3)) +\n  plot_annotation(title = 'Average Outage Duration (SAIDI) by Renewable Penetration With and Without Major Events in 2023',\n                  theme = theme(plot.title = element_text(size = 15)))\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range (`stat_smooth()`).\nRemoved 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\n# Store median of renewable penetration and of SAIDI with major events\nall_events_pen_med &lt;- median(scatter_state_2023$w_s_pen)\nall_events_SAIDI_med &lt;- median(scatter_state_2023$SAIDI)\n\n# Prep data with major events for mosaic plot\nall_events_mos &lt;- scatter_state_2023 |&gt;\n  mutate(Penetration = factor(if_else(w_s_pen &gt;= all_events_pen_med, 'Above', 'States below median'),\n                              levels = c('States below median','Above')),\n         SAIDI = factor(if_else(SAIDI &gt;= all_events_SAIDI_med, 'Above', 'States below median'),\n                        levels = c('States below median','Above'))) |&gt;\n  select(-w_s_pen)\n\n# Store median of renewable penetration and of SAIDI without major events\nno_major_pen_med &lt;- median(no_hawaii$w_s_pen)\nno_major_SAIDI_med &lt;- median(no_hawaii$SAIDI)\n\n# Prep data without major events for mosaic plot\nno_major_mos &lt;- no_hawaii |&gt;\n  mutate(Penetration = factor(if_else(w_s_pen &gt;= no_major_pen_med, 'Above', 'States below median'),\n                              levels = c('States below median','Above')),\n         SAIDI = factor(if_else(SAIDI &gt;= no_major_SAIDI_med, 'Above', 'States below median'),\n                        levels = c('States below median','Above'))) |&gt;\n  select(-w_s_pen)\n\n# Create mosaic plots for both event grouping types\nmosaic(SAIDI ~ Penetration, all_events_mos, direction = c(\"v\", \"h\"),\n       main = \"All Events (With Major Event Days)\",\n       highlighting_fill = c('#f37a717F','#f37a71'))\n\n\n\n\n\n\n\n\n\nCode\nmosaic(SAIDI ~ Penetration, no_major_mos, direction = c(\"v\", \"h\"),\n       main = 'No Major Event Days',\n       highlighting_fill = c('#31bdc37F','#31bdc3'))",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#is-there-a-geographic-explanation",
    "href": "results.html#is-there-a-geographic-explanation",
    "title": "3  Results",
    "section": "3.4 Is there a geographic explanation?",
    "text": "3.4 Is there a geographic explanation?\n\n\nCode\n# Sum SAIDI across the decade of data with all major events\ndecade_SAIDI_all &lt;- data_rbs |&gt;\n  filter(state != 'HI') |&gt;\n  group_by(state) |&gt;\n  summarise(SAIDI_all = sum(SAIDI))\n\n# Sum SAIDI across the decade of data without major events\ndecade_SAIDI_nm &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'Without Major Event Days',\n         state != 'HI') |&gt;\n  group_by(state) |&gt;\n  summarise(SAIDI_nm = sum(SAIDI))\n\n# Join datasets\nbar &lt;- decade_SAIDI_all |&gt;\n  left_join(decade_SAIDI_nm, by = 'state')\n\n# Order states by SAIDI with all major events\nbar$state &lt;- reorder(bar$state, bar$SAIDI_all)\n\n# Create Cleveland dotplot colored by event grouping type\nggplot(bar, mapping = aes(y = state, x = SAIDI_all, color = 'All Events (With Major Event Days)')) +\n  geom_point(size = 3) +\n  geom_point(size = 3, mapping = aes(x = SAIDI_nm, color = 'Without Major Event Days')) +\n  scale_x_continuous(limits = c(0, 15000)) +\n  labs(x = 'Total Average Outage Duration (SAIDI)',\n       y = 'State',\n       title = 'Total Average Outage Duration (SAIDI) by State from 2013-2023',\n       color = 'Outage Event Grouping') +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\nWe want to investigate if any states stand out when we focusing on high SAIDI years, when including all events. In other words, what states are responsible for “Major Events” in high-disruption years.\nBy mapping total outage hours across high-disruption years (2017, 2020, 2021), this plot highlights states disproportionately affected by outages. We suspect this is due to extreme weather events such as winter storms and hurricanes, underscoring the intersection of climate resilience and energy grid reliability.\n\nIn 2017: Maine, Vermont, and Florida stand out\nIn 2020: Maine, Connecticut, Mississippi, Alabama, and Louisiana stand out\nIn 2021: Texas, Oregon, and Louisiana stand out\n\nTo provide a clearer perspective, the outage values are capped at 24 hours, representing a cumulative full day of outages over the course of a year. This approach highlights states with particularly disruptive events while maintaining focus on severe reliability issues. Without capping, we risk losing important granularity, as excessively high values from outlier events could overshadow state-by-state comparisons and trends.\n\n\nCode\ndata5 &lt;- read.csv(\"T4_ReliabilityByState.csv\")\n# State abbreviations and full names\nstate_abbrev &lt;- tibble(\n  state_full = tolower(state.name),\n  state_abbrev = state.abb\n)\n\nfiltered_data5 &lt;- data5 |&gt;\n  filter(Method == \"IEEE\", \n         Event_Grouping == \"All Events (With Major Event Days)\",\n         Census_Division %in% c(2017, 2020, 2021),\n         !is.na(Census_Division)) |&gt;\n  select(-Method, -Event_Grouping, -HI, -AK)\n\n# Reshape the data into a long format\nlong_data5 &lt;- filtered_data5 |&gt;\n  pivot_longer(cols = -Census_Division, names_to = \"state_abbrev\", values_to = \"value\")\n\n# Convert values from minutes to hours and cap at 24 hours\nlong_data5 &lt;- long_data5 |&gt;\n  mutate(value = pmin(value / 60, 24)) \n\n# Load state geometries\nus_states &lt;- st_as_sf(maps::map(\"state\", plot = FALSE, fill = TRUE))\nus_states &lt;- us_states |&gt;\n  mutate(state_full = ID) |&gt;\n  left_join(state_abbrev, by = c(\"state_full\" = \"state_full\")) \n\n# Merge data with geometries\nmapped_data &lt;- us_states |&gt;\n  left_join(long_data5, by = c(\"state_abbrev\" = \"state_abbrev\")) |&gt;\n  filter(state_abbrev != \"DC\")\n\n# Plot the map with facets for Census Division\nggplot(data = mapped_data) +\n  geom_sf(aes(fill = value), color = \"white\", lwd = 0.2) +\n  scale_fill_viridis_c(option = \"viridis\", na.value = \"gray80\", limits = c(0, 24)) +\n  labs(title = \"U.S. Outage Hours by State in High-Disruption Years\",\n       fill = \" Total Outage Hours\\n (Capped at 24H)\") +\n  facet_wrap(~ Census_Division, ncol = 1) + # Facet by Census Division\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 12) \n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#confirming-that-these-standouts-are-caused-by-extreme-weather-events",
    "href": "results.html#confirming-that-these-standouts-are-caused-by-extreme-weather-events",
    "title": "3  Results",
    "section": "3.5 Confirming that these standouts are caused by extreme weather events",
    "text": "3.5 Confirming that these standouts are caused by extreme weather events\nEach high-disruption state and year can be linked to an of extreme weather event, such as a winter storm, hurricane or tornado. By year, the events are as follows:\n\n2017:\n\nMaine: October Nor’easter Storm\nVermont: October Nor’easter Storm\nFlorida: September Hurricane Irma\n\n2020\n\nMaine: April 12th Snowstorm\nConnecticut: August Tropical Storm Isaias\nMississippi: Easter Tornado Outbreak\nAlabama: Easter Tornado Outbreak\nLouisiana: Easter Tornado Outbreak\n\n2020\n\nTexas: February Winter Storm Uri\nOregon: February Ice Storms\nLouisiana: September Hurricane Ida\n\n\nThe news articles and websites linked above tie these weather events to power outages, and the plot below confirms that daily outage minutes spike in times of extreme weather. The plot shows a daily outage metric in Texas over the course of 2021, with the dates of Winter Storm Uri (February 10-25) highlighted in yellow. As we expected, the highest number of outage minutes, by a large measure, lands within these storm days.\n\n\nCode\n# Read the data\nsaidi_data &lt;- read.csv(\"Texas_Daily_SAIDI.csv\")\n\n# Convert Date column to Date type\nsaidi_data$Date &lt;- as.Date(saidi_data$Date, format = \"%m/%d/%y\")\n\nhighlight_period &lt;- data.frame(\n  xmin = as.Date(\"2021-02-10\"),\n  xmax = as.Date(\"2021-02-25\"),\n  ymin = -Inf,\n  ymax = Inf,\n  label = \"Winter Storm Uri\"\n)\n\n# Plot the data\nggplot(saidi_data, aes(x = Date, y = Daily.SAIDI)) +\n  geom_rect(data = highlight_period, \n            aes(xmin = xmin, xmax = xmax, ymin = ymin, ymax = ymax, fill = label),\n            alpha = 0.8, inherit.aes = FALSE) +\n  scale_fill_manual(name = \"\", values = c(\"Winter Storm Uri\" = \"#f3ff52\")) +\n  geom_line(color = \"#3c5c8a\", linewidth = .75) +\n  labs(title = \"Daily Outage Duration (SAIDI) in Texas in 2021\",\n       x = NULL,\n       y = \"Daily Outage Duration (SAIDI)\") +\n  theme_minimal() +\n  theme(legend.position = \"bottom\")",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#the-economic-case-for-renewables",
    "href": "results.html#the-economic-case-for-renewables",
    "title": "3  Results",
    "section": "3.6 The economic case for renewables:",
    "text": "3.6 The economic case for renewables:",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html",
    "href": "d3graph.html",
    "title": "4  Interactive graph",
    "section": "",
    "text": "4.1 How to interact with this graph:\nTo explore this data and to discover the trend in the frequency of these events, click through the checkboxes below to unveil the number of each of these climate disasters where overall damages/costs reached or exceeded $1 billion.\nWhen all disaster types are selected, the most notable trend is the significant rise in severe storms, which show the highest upward trajectory among all disaster types. The cumulative impact of these disasters is particularly striking, as the total number of events has steadily grown, especially since the mid-2000s. This pattern highlights a concerning escalation in the frequency of these costly weather events, emphasizing the need for robust climate resilience of the U.S. electricity grid.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  },
  {
    "objectID": "results.html#is-there-any-correlationassociation-between-renewable-penetration-and-grid-reliability",
    "href": "results.html#is-there-any-correlationassociation-between-renewable-penetration-and-grid-reliability",
    "title": "3  Results",
    "section": "3.3 Is there any correlation/association between renewable penetration and grid reliability?",
    "text": "3.3 Is there any correlation/association between renewable penetration and grid reliability?\nWe explore the affect of renewable penetration on reliability metrics by plotting the former against the SAIDI reliability index by state. Since the wind doesn’t always blow and the sun doesn’t always shine, one might worry that the growth of renewable penetration, especially over the last decade, has caused higher levels of grid unreliability than other energy sources which operate independently of the weather.\nHowever, no clear positive correlation appears in the scatter plot below when outage event type is not considered. A split in distribution becomes visible when points are grouped by whether SAIDI is calculated including or excluding major event/outage days. While both groups demonstrate a slightly negative correlation, the group excluding major event days shows the stronger relationship: an increase in renewable penetration correlates with a decrease in average outage duration (SAIDI). This suggests that the country’s increased dependency on wind and solar might indeed not relate to higher unreliability of the grid.\n\n\nCode\n# Load reliability metrics (SAIDI) from 2013-2023 by state\nt4_rbs &lt;- read_csv(\"T4_ReliabilityByState.csv\")\n\n\nRows: 55 Columns: 54\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (2): Method, Event_Grouping\ndbl (52): Census_Division, CT, ME, MA, NH, RI, VT, NJ, NY, PA, IL, IN, MI, O...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Pivot longer by state and filter to IEEE All Events\ndata_rbs &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'All Events (With Major Event Days)')\n\n# Create 2023-only version with major event days\nrbs_2023 &lt;- data_rbs |&gt;\n  filter(Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\n# Create 2023-only version without major event days\nrbs_2023_no_major &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'Without Major Event Days',\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI)\n\n# Load renewable penetration from 2023 by state\nstate_generation_2023 &lt;- read_csv('state_generation_2023.csv')\n\n\nRows: 503 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): state, source\ndbl (3): year, generation, gen_round\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\n# Calculate generation by energy type by state\nstate_generation_2023 &lt;- state_generation_2023 |&gt;\n  group_by(state, source) |&gt;\n  summarise(generation = sum(generation))\n\n\n`summarise()` has grouped output by 'state'. You can override using the\n`.groups` argument.\n\n\nCode\n# Derive renewable penetration from generation\nstate_pen_2023 &lt;- state_generation_2023 |&gt;\n  pivot_wider(names_from = source, values_from = generation, values_fill = 0) |&gt;\n  mutate(total_gen = coal + natural.gas + other.renewables + petroleum.and.other + solar + wind + nuclear,\n         wind_solar = wind + solar,\n         w_s_pen = wind_solar/total_gen)\n\n# Create combo dataset that disregards event grouping type\nrbs_2023_combo &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping %in% c('Without Major Event Days','All Events (With Major Event Days)'),\n         Census_Division == '2023') |&gt;\n  select(state, SAIDI, Event_Grouping)\n\n# Join reliability (SAIDI) with renewable penetration by state with major event days\nscatter_state_2023 &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\n# Join reliability (SAIDI) with renewable penetration by state without major event days\nscatter_state_2023_no_major &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_no_major, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI)\n\n# Join reliability (SAIDI) with renewable penetration by state for combo version \nscatter_state_2023_combo &lt;- state_pen_2023 |&gt;\n  left_join(rbs_2023_combo, by = 'state') |&gt;\n  select(state, w_s_pen, SAIDI, Event_Grouping)\n\n# Store scatter plot colored by event grouping type\nplot2 &lt;- ggplot(data = scatter_state_2023_combo, mapping = aes(x = w_s_pen, y = SAIDI, color = Event_Grouping)) +\n  geom_point(alpha = .7, size = 3, na.rm = TRUE) +\n  # coord_cartesian(ylim = c(0,1850)) + \n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Renewable Penetration\",\n       y = \"Average Outage Duration (SAIDI)\",\n       color = \"Outage Event Grouping\") +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n# Get rid of Hawaii (NA) to calculate correlation coefficient\nno_hawaii &lt;-scatter_state_2023_no_major |&gt;\n  filter(state != 'HI')\n\n# Calc corr coeff\ncc &lt;- cor(no_hawaii$w_s_pen, no_hawaii$SAIDI)\n\n# Store second scatter plot, a version zoomed in on without major event days that includes a regression\nplot3 &lt;- ggplot(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'), mapping = aes(x = w_s_pen, y = SAIDI)) +\n  geom_point(alpha = .7, size = 3, color = '#31bdc3', na.rm = TRUE) +\n  geom_smooth(data = filter(scatter_state_2023_combo, Event_Grouping == 'Without Major Event Days'),\n              formula = y ~ x,\n              method = 'lm',\n              color = '#1d7276',\n              na.rm = TRUE) +\n  annotate(\"text\", x = .35, y = 125, label = paste(\"Correlation:\", round(cc, 3))) +\n  coord_cartesian(ylim = c(0, 450)) +\n  scale_x_continuous(labels = scales::percent_format()) +\n  labs(x = \"Renewable Penetration\",\n       y = \"Average Outage Duration (SAIDI)\") +\n  theme_minimal()\n\n# Patch plots together\nplot2 + plot3 +\n  plot_layout(widths = c(2, 2.3)) +\n  plot_annotation(title = 'Average Outage Duration (SAIDI) by Renewable Penetration With and Without Major Events in 2023',\n                  theme = theme(plot.title = element_text(size = 15)))\n\n\n\n\n\n\n\n\n\nVisualizing this conclusion with mosaic plots further highlights the variables’ negative correlation, even when major event days were included. (Since both renewable penetration and reliability metrics are continuous variables, we first set a threshold at their respective medians and within each event grouping to then sort states into categories.) Notice that the plots similarly exhibit an inverse relationship between renewable penetration and outage duration regardless of major event days.\n\n\nCode\n# Store median of renewable penetration and of SAIDI with major events\nall_events_pen_med &lt;- median(scatter_state_2023$w_s_pen)\nall_events_SAIDI_med &lt;- median(scatter_state_2023$SAIDI)\n\n# Prep data with major events for mosaic plot\nall_events_mos &lt;- scatter_state_2023 |&gt;\n  mutate(Penetration = factor(if_else(w_s_pen &gt;= all_events_pen_med, 'Above', 'States below median'),\n                              levels = c('States below median','Above')),\n         SAIDI = factor(if_else(SAIDI &gt;= all_events_SAIDI_med, 'Above', 'States below median'),\n                        levels = c('States below median','Above'))) |&gt;\n  select(-w_s_pen)\n\n# Store median of renewable penetration and of SAIDI without major events\nno_major_pen_med &lt;- median(no_hawaii$w_s_pen)\nno_major_SAIDI_med &lt;- median(no_hawaii$SAIDI)\n\n# Prep data without major events for mosaic plot\nno_major_mos &lt;- no_hawaii |&gt;\n  mutate(Penetration = factor(if_else(w_s_pen &gt;= no_major_pen_med, 'Above', 'States below median'),\n                              levels = c('States below median','Above')),\n         SAIDI = factor(if_else(SAIDI &gt;= no_major_SAIDI_med, 'Above', 'States below median'),\n                        levels = c('States below median','Above'))) |&gt;\n  select(-w_s_pen)\n\n# Create mosaic plots for both event grouping types\nmosaic(SAIDI ~ Penetration, all_events_mos, direction = c(\"v\", \"h\"),\n       main = \"All Events (With Major Event Days)\",\n       highlighting_fill = c('#f37a717F','#f37a71'))\n\n\n\n\n\n\n\n\n\nCode\nmosaic(SAIDI ~ Penetration, no_major_mos, direction = c(\"v\", \"h\"),\n       main = 'No Major Event Days',\n       highlighting_fill = c('#31bdc37F','#31bdc3'))\n\n\n\n\n\n\n\n\n\nThe information provided by both plot types not only contradicts worry that renewable energy, dependent on intermittent sources, takes a toll on reliable energy generation within the US. It also suggests the possibility that increased renewable energy positively affects the grid. Moreover, the difference in correlation when major event days are included or excluded leads us to wonder if another factor is at play.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#are-there-geographic-trends",
    "href": "results.html#are-there-geographic-trends",
    "title": "3  Results",
    "section": "3.4 Are there geographic trends?",
    "text": "3.4 Are there geographic trends?\nTo begin exploring a second factor, it helps us to know which states had the highest amounts of interruptions across the last decade, no matter the reason. The Cleveland dot plot below shows the sum of SAIDI by state from 2013 to 2023, which reveals the states with the least reliable energy generation at the top. (Hawaii is excluded for missing data.) Louisiana, Maine, and West Virginia float to the top when all events are considered but with a key distinction. West Virginia’s two sums are significantly closer than those of Louisiana and Maine, suggesting different reasons behind their outages. We imagine that West Virginia may simply have a problematic grid, whereas Louisiana and Maine may experience volatile, external impacts. The next step is to search for that volatility.\n\n\nCode\n# Sum SAIDI across the decade of data with all major events\ndecade_SAIDI_all &lt;- data_rbs |&gt;\n  filter(state != 'HI') |&gt;\n  group_by(state) |&gt;\n  summarise(SAIDI_all = sum(SAIDI))\n\n# Sum SAIDI across the decade of data without major events\ndecade_SAIDI_nm &lt;- t4_rbs |&gt;\n  pivot_longer(cols = c('CT':'HI'),names_to = 'state', values_to = 'SAIDI') |&gt;\n  filter(Method == 'IEEE',\n         Event_Grouping == 'Without Major Event Days',\n         state != 'HI') |&gt;\n  group_by(state) |&gt;\n  summarise(SAIDI_nm = sum(SAIDI))\n\n# Join datasets\nbar &lt;- decade_SAIDI_all |&gt;\n  left_join(decade_SAIDI_nm, by = 'state')\n\n# Order states by SAIDI with all major events\nbar$state &lt;- reorder(bar$state, bar$SAIDI_all)\n\n# Create Cleveland dotplot colored by event grouping type\nggplot(bar, mapping = aes(y = state, x = SAIDI_all, color = 'All Events (With Major Event Days)')) +\n  geom_point(size = 3) +\n  geom_point(size = 3, mapping = aes(x = SAIDI_nm, color = 'Without Major Event Days')) +\n  scale_x_continuous(limits = c(0, 15000)) +\n  labs(x = 'Total Average Outage Duration (SAIDI)',\n       y = 'State',\n       title = 'Total Average Outage Duration (SAIDI) by State from 2013-2023',\n       color = 'Outage Event Grouping') +\n  theme_minimal() +\n  theme(legend.position = 'bottom')\n\n\n\n\n\n\n\n\n\nThe high SAIDI years from the grid reliability metrics line graph provide an efficient starting place for our search. We want to investigate if any states stand out when we focus on those years and include all events. In other words, our goal is to identify which states were most impacted by “Major Events” in high-disruption years.\nMapping total outage hours across high-disruption years (2017, 2020, 2021) highlights the states disproportionately affected by outages. We suspect this is due to severe, regional weather events, such as winter storms and hurricanes, underscoring the intersection of climate resilience and energy grid reliability.\n\nIn 2017: Maine, Vermont, and Florida stand out\nIn 2020: Maine, Connecticut, Mississippi, Alabama, and Louisiana stand out\nIn 2021: Texas, Oregon, and Louisiana stand out\n\nTo provide a clearer perspective, the outage values are capped at 24 hours, which represents a cumulative full day of outages over the course of one year. This approach uncovers states with particularly disruptive events while maintaining focus on severe reliability issues. Without capping, we risk losing important granularity since excessively high values from outlier events could overshadow state-by-state comparisons and trends.\n\n\nCode\ndata5 &lt;- read.csv(\"T4_ReliabilityByState.csv\")\n# State abbreviations and full names\nstate_abbrev &lt;- tibble(\n  state_full = tolower(state.name),\n  state_abbrev = state.abb\n)\n\nfiltered_data5 &lt;- data5 |&gt;\n  filter(Method == \"IEEE\", \n         Event_Grouping == \"All Events (With Major Event Days)\",\n         Census_Division %in% c(2017, 2020, 2021),\n         !is.na(Census_Division)) |&gt;\n  select(-Method, -Event_Grouping, -HI, -AK)\n\n# Reshape the data into a long format\nlong_data5 &lt;- filtered_data5 |&gt;\n  pivot_longer(cols = -Census_Division, names_to = \"state_abbrev\", values_to = \"value\")\n\n# Convert values from minutes to hours and cap at 24 hours\nlong_data5 &lt;- long_data5 |&gt;\n  mutate(value = pmin(value / 60, 24)) \n\n# Load state geometries\nus_states &lt;- st_as_sf(maps::map(\"state\", plot = FALSE, fill = TRUE))\nus_states &lt;- us_states |&gt;\n  mutate(state_full = ID) |&gt;\n  left_join(state_abbrev, by = c(\"state_full\" = \"state_full\")) \n\n# Merge data with geometries\nmapped_data &lt;- us_states |&gt;\n  left_join(long_data5, by = c(\"state_abbrev\" = \"state_abbrev\")) |&gt;\n  filter(state_abbrev != \"DC\")\n\n# Plot the map with facets for Census Division\nggplot(data = mapped_data) +\n  geom_sf(aes(fill = value), color = \"white\", lwd = 0.2) +\n  scale_fill_viridis_c(option = \"viridis\", na.value = \"gray80\", limits = c(0, 24)) +\n  labs(title = \"U.S. Outage Hours by State in High-Disruption Years\",\n       fill = \" Total Outage Hours\\n (Capped at 24H)\") +\n  facet_wrap(~ Census_Division, ncol = 1) + # Facet by Census Division\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.ticks = element_blank(),\n    panel.grid = element_blank(),\n    strip.text = element_text(size = 12) \n  )",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "results.html#insert-last-topic",
    "href": "results.html#insert-last-topic",
    "title": "3  Results",
    "section": "3.6 [INSERT LAST TOPIC]",
    "text": "3.6 [INSERT LAST TOPIC]\n\n\nCode\narea &lt;- read_csv('StateAreaMeasurements.csv')\n\n\nRows: 51 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): state\ndbl (3): total, land, water\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nCode\narea_rbs &lt;- rbs_2023_combo |&gt;\n  left_join(area, by = 'state')\n\narea_rbs\n\n\n# A tibble: 102 × 6\n   state SAIDI Event_Grouping                     total  land water\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                              &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 CT     193. All Events (With Major Event Days)  5543  4842   701\n 2 ME    1863  All Events (With Major Event Days) 35380 30843  4537\n 3 MA     265. All Events (With Major Event Days) 10554  7800  2754\n 4 NH     591. All Events (With Major Event Days)  9349  8953   397\n 5 RI     105. All Events (With Major Event Days)  1545  1034   511\n 6 VT     486. All Events (With Major Event Days)  9616  9217   400\n 7 NJ     108. All Events (With Major Event Days)  8723  7354  1368\n 8 NY     205. All Events (With Major Event Days) 54555 47126  7429\n 9 PA     265. All Events (With Major Event Days) 46054 44743  1312\n10 IL     210. All Events (With Major Event Days) 57914 55519  2395\n# ℹ 92 more rows\n\n\nCode\nggplot(area_rbs, mapping = aes(x = total, y = SAIDI, color = Event_Grouping)) +\n  geom_point()\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\narea_rbs &lt;- rbs_2023_combo |&gt;\n  left_join(area, by = 'state') |&gt;\n  filter(Event_Grouping == 'Without Major Event Days')\n\narea_rbs\n\n\n# A tibble: 51 × 6\n   state SAIDI Event_Grouping           total  land water\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                    &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 CT     77.7 Without Major Event Days  5543  4842   701\n 2 ME    247.  Without Major Event Days 35380 30843  4537\n 3 MA     83.5 Without Major Event Days 10554  7800  2754\n 4 NH     89.3 Without Major Event Days  9349  8953   397\n 5 RI     52.2 Without Major Event Days  1545  1034   511\n 6 VT    204.  Without Major Event Days  9616  9217   400\n 7 NJ     88   Without Major Event Days  8723  7354  1368\n 8 NY    130.  Without Major Event Days 54555 47126  7429\n 9 PA    126.  Without Major Event Days 46054 44743  1312\n10 IL     56.2 Without Major Event Days 57914 55519  2395\n# ℹ 41 more rows\n\n\nCode\nggplot(area_rbs, mapping = aes(x = total, y = SAIDI)) +\n  geom_point() +\n  geom_smooth(method = 'lm')\n\n\n`geom_smooth()` using formula = 'y ~ x'\n\n\nWarning: Removed 1 row containing non-finite outside the scale range\n(`stat_smooth()`).\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).\n\n\n\n\n\n\n\n\n\n\n\nCode\narea_rbs &lt;- rbs_2023_combo |&gt;\n  left_join(area, by = 'state')\n\narea_rbs\n\n\n# A tibble: 102 × 6\n   state SAIDI Event_Grouping                     total  land water\n   &lt;chr&gt; &lt;dbl&gt; &lt;chr&gt;                              &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n 1 CT     193. All Events (With Major Event Days)  5543  4842   701\n 2 ME    1863  All Events (With Major Event Days) 35380 30843  4537\n 3 MA     265. All Events (With Major Event Days) 10554  7800  2754\n 4 NH     591. All Events (With Major Event Days)  9349  8953   397\n 5 RI     105. All Events (With Major Event Days)  1545  1034   511\n 6 VT     486. All Events (With Major Event Days)  9616  9217   400\n 7 NJ     108. All Events (With Major Event Days)  8723  7354  1368\n 8 NY     205. All Events (With Major Event Days) 54555 47126  7429\n 9 PA     265. All Events (With Major Event Days) 46054 44743  1312\n10 IL     210. All Events (With Major Event Days) 57914 55519  2395\n# ℹ 92 more rows\n\n\nCode\nggplot(area_rbs, mapping = aes(x = land, y = SAIDI, color = Event_Grouping)) +\n  geom_point()\n\n\nWarning: Removed 1 row containing missing values or values outside the scale range\n(`geom_point()`).",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Results</span>"
    ]
  },
  {
    "objectID": "d3graph.html#how-to-interact-with-this-graph",
    "href": "d3graph.html#how-to-interact-with-this-graph",
    "title": "4  Interactive graph",
    "section": "",
    "text": "Billion-Dollar Weather and Climate Disasters",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Interactive graph</span>"
    ]
  }
]